use serde::{Deserialize, Serialize};
use utoipa::ToSchema;
#[derive(ToSchema, Serialize, Deserialize)]
pub struct Object {
    actionOverrides: Option<String>,
    activateable: bool,
    associateEntityType: Option<String>,
    associateParentEntity: Option<String>,
    childRelationships: Option<String>,
    compactLayoutable: bool,
    createable: bool,
    custom: bool,
    customSetting: bool,
    deepCloneable: bool,
    defaultImplementation: Option<String>,
    deletable: bool,
    deprecatedAndHidden: bool,
    extendedBy: bool,
    extendsInterfaces: Option<String>,
    feedEnabled: bool,
    fields: Vec<String>,
    hasSubtypes: bool,
    implementedBy: Option<String>,
    implementsInterfaces: Option<String>,
    isInterface: bool,
    isSubtype: bool,
    keyPrefix: String,
    label: String,
    labelPlural: String,
    layoutable: bool,
    Vecviewable: Option<String>,
    lookupLayoutable: Option<String>,
    mergeable: bool,
    mruEnabled: bool,
    name: String,
    namedLayoutInfos: Vec<String>,
    networkScopeFieldName: bool,
    queryable: bool,
    recordTypeInfos: Vec<String>,
    replicateable: bool,
    retrieveable: bool,
    searchLayoutable: bool,
    searchable: bool,
    sobjectDescribeOption: String,
    supportedScopes: Vec<String>,
    triggerable: bool,
    undeletable: bool,
    updateable: bool,
    urls: Vec<String>,
}

impl Object {
    pub fn new(name: &String) -> Self {
        Object {
            actionOverrides: None,
            activateable: false,
            associateEntityType: None,
            associateParentEntity: None,
            childRelationships: None,
            compactLayoutable: false,
            createable: false,
            custom: false,
            customSetting: false,
            deepCloneable: false,
            defaultImplementation: None,
            deletable: false,
            deprecatedAndHidden: false,
            extendedBy: false,
            extendsInterfaces: None,
            feedEnabled: false,
            fields: Vec::new(),
            hasSubtypes: false,
            implementedBy: None,
            implementsInterfaces: None,
            isInterface: false,
            isSubtype: false,
            keyPrefix: String::new(),
            label: name.to_string(),
            labelPlural: name.to_string(),
            layoutable: false,
            Vecviewable: None,
            lookupLayoutable: None,
            mergeable: false,
            mruEnabled: false,
            name: name.to_string(),
            namedLayoutInfos: Vec::new(),
            networkScopeFieldName: false,
            queryable: false,
            recordTypeInfos: Vec::new(),
            replicateable: false,
            retrieveable: false,
            searchLayoutable: false,
            searchable: false,
            sobjectDescribeOption: String::new(),
            supportedScopes: Vec::new(),
            triggerable: false,
            undeletable: false,
            updateable: false,
            urls: Vec::new(),
        }
    }
}
